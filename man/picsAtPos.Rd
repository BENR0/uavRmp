% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/picsAPos.R
\name{picsAtPos}
\alias{picsAtPos}
\title{calculates a ostacle free flight path for a defined list of target positions}
\usage{
picsAtPos(projectDir = "~", locationName = "autoflightcontrol",
  missionTrackList = NULL, launchPos = NULL, demFn = NULL,
  flightAltitude = 75, climbDist = 7.5, aboveTreeAlt = 15,
  circleRadius = 5, takeOffAlt = 50, presetFlightTask = "remote",
  maxSpeed = 25, followSurfaceRes = 5, altFilter = 1, maxFL = 10,
  windCondition = 1, launchAltitude = -9999, uavType = "solo")
}
\arguments{
\item{projectDir}{path to the main folder where several projects can be hosted It will overwrite the DEM based estimation if any other value than -9999}

\item{locationName}{base name string of the mission}

\item{missionTrackList}{mission tracklist (target positions)}

\item{launchPos}{launch position c(lon,lat), c(8.772055,50.814689)}

\item{demFn}{filename of the used DSM data file}

\item{flightAltitude}{set the default flight altitude (note AGL while the provided raster model represents this surface) of the mission. You have to defined the position of launching.
By default it is set to (\code{= 0.0}). If set to \code{-99} it will be 
calculated from the swath width of the pictures. NOTE This makes only sense for 
\code{followingTerrain = TRUE} to smooth curves.
For \code{flightPlanMode = "waypoint"} camera actions are DISABLED during curve flights.}

\item{climbDist}{distance within the uav will climb on the caluclated save flight altitude in meter}

\item{aboveTreeAlt}{minum height above target trees in meter}

\item{circleRadius}{radius to circle around above target trees in meter}

\item{takeOffAlt}{altitude (MSL) of take off position in meter}

\item{presetFlightTask}{(DJI only experimental) strongly recommended to use "remote" \cr
 Options are: \cr
\code{"simple_ortho"} takes one picture/waypoint,
\code{"multi_ortho"} takes 4 picture at a waypoint, two vertically down and two in forward and backward viewing direction and an angele of -60deg,
\code{"simple_pano"} takes a 360 deg panorama picture and 
\code{"remote"} which assumes that the camera is controlled by the remote control (RC)}

\item{maxSpeed}{cruising speed}

\item{followSurfaceRes}{followSurfaceRes}

\item{altFilter}{allowed altitude differences in meter}

\item{maxFL}{maxFL}

\item{windCondition}{1= calm 2= light air 1-5km/h, 3= light breeze 6-11km/h, 4=gentle breeze 12-19km/h 5= moderate breeze 20-28km/h}

\item{launchAltitude}{altitude of launch position. If set to -9999 a DEM is required for extracting the MSL. Default is -9999}

\item{uavType}{type of uav. currently "djip3" and "solo" are supported}
}
\description{
picsAtPos generates a flight track chaining up point objects with respect to a heterogenous Surface and known obstacles as documented by an DSM for taking top down pictures.
}
\examples{
\dontrun{
requires(mapview)
targetPosPics  <-  picsAtPos(projectDir ="/home/creu/uav/bayerwald",
                           locationName = "filzmoosTree",
                           missionTrackList="~/uav/bayerwald/Selected_trees_Filz.txt",
                           demFn = "~/uav/grossfilz/grosserfilz.tif",
                           windCondition = 2,
                           uavType = "solo",
                           followSurfaceRes=5,
                           launchPos = c(8.772055,50.814689))
# view result
mapview(targetPosPics$wp,zcol = "altitude",lwd=1,cex=5)+
mapview(t3$lp,color="red",cex=5)
}

}
